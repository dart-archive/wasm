name: CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
  - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github
  RUST_BACKTRACE: 1  # Run all tests with full Rust stack tracing.

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [ dev ]
    defaults:
      run:
        working-directory: wasm
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
      with:
        sdk: ${{ matrix.sdk }}
    - uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
      with:
        path: |
          ~/.pub-cache/hosted/
          .dart_tool/
        key: ${{ runner.os }}-${{ matrix.sdk }}
    - id: install
      run: dart pub upgrade
    - run: dart format --output=none --set-exit-if-changed .
      if: always() && steps.install.outcome == 'success'
    - run: dart analyze --fatal-infos
      if: always() && steps.install.outcome == 'success'
    - name: validate boilerplate generation
      if: always() && steps.install.outcome == 'success'
      run: |
        ./tool/generate_ffi_boilerplate.py
        dart format -owrite .
        export DIFF_OUTPUT="$(git diff)"
        if [[ $DIFF_OUTPUT ]]; then
          echo "::error::Build needs to be re-run!"
          echo "::group::git diff"
          echo "$DIFF_OUTPUT"
          echo "::endgroup::"
          exit 1
        else
          echo "Build output is all good!"
        fi

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        sdk: [ 2.18.5, dev ]
    defaults:
      run:
        working-directory: wasm
    steps:
    - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
      with:
        sdk: ${{ matrix.sdk }}
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.pub-cache/hosted/
          .dart_tool/
        key: ${{ runner.os }}-${{ matrix.sdk }}
    - run: dart pub upgrade
    - run: dart run wasm:setup
    - run: dart test -j 1

  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wasm
    steps:
    - uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
      with:
        sdk: dev
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.pub-cache/hosted/
          .dart_tool/
        key: ubuntu-latest-dev
    - name: Install dependencies
      run: dart pub get
    - name: Setup wasm
      run: dart run wasm:setup
    - name: Install coverage
      run: dart pub global activate coverage
    - name: Collect and report coverage
      run: dart pub global run coverage:test_with_coverage
    - name: Upload coverage
      uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: wasm/coverage/lcov.info

  flutter_analyze:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flutter_wasm
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
      with:
        flutter-version: '3.3.9'
    - id: install
      run: |
        flutter pub upgrade
        flutter pub upgrade --directory example
    - run: flutter format --output=none --set-exit-if-changed .
      if: always() && steps.install.outcome == 'success'
    - run: flutter analyze --fatal-infos
      if: always() && steps.install.outcome == 'success'

  flutter_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flutter_wasm
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
      with:
        flutter-version: '3.3.9'
    - run: flutter pub upgrade
    - run: flutter pub run flutter_wasm:setup
    - run: flutter test

  flutter_example_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flutter_wasm/example
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
    - uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc
      with:
        java-version: 11
        distribution: temurin
    - uses: android-actions/setup-android@7c5672355aaa8fde5f97a91aa9a99616d1ace6bc
    - uses: nttld/setup-ndk@8c3b609ff4d54576ea420551943fd34b4d03b0dc
      with:
        ndk-version: r25b
        local-cache: true
        add-to-path: true
    - run: echo "ndk.dir=$(dirname $(which ndk-build))" >> android/local.properties
    - uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d
      with:
        flutter-version: '3.3.9'
    - run: flutter pub upgrade
    - run: flutter pub run flutter_wasm:setup
    - run: flutter test
    - run: flutter build apk
    - run: flutter build appbundle
