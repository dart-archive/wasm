name: CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
  - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

defaults:
  run:
    shell: bash

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [ dev ]
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: dart-lang/setup-dart@v1.0
      with:
        sdk: ${{ matrix.sdk }}
    - uses: actions/cache@v2.1.6
      with:
        path: |
          ~/.pub-cache/hosted/
          .dart_tool/
        key: ${{ runner.os }}-${{ matrix.sdk }}
    - id: install
      run: dart pub upgrade
    - run: dart format --output=none --set-exit-if-changed .
      if: always() && steps.install.outcome == 'success'
    - run: dart analyze --fatal-infos
      if: always() && steps.install.outcome == 'success'
    - name: validate boilerplate generation
      if: always() && steps.install.outcome == 'success'
      run: |
        ./tool/generate_ffi_boilerplate.py
        dart format -owrite .
        export DIFF_OUTPUT="$(git diff)"
        if [[ $DIFF_OUTPUT ]]; then
          echo "::error::Build needs to be re-run!"
          echo "::group::git diff"
          echo "$DIFF_OUTPUT"
          echo "::endgroup::"
          exit 1
        else
          echo "Build output is all good!"
        fi

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        sdk: [ 2.12.0, dev ]
    steps:
    - uses: dart-lang/setup-dart@v1.0
      with:
        sdk: ${{ matrix.sdk }}
    - uses: actions/checkout@v2.3.4
    - uses: actions/cache@v2.1.6
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.pub-cache/hosted/
          .dart_tool/
        key: ${{ runner.os }}-${{ matrix.sdk }}
    - run: dart pub upgrade
    - run: dart run wasm:setup
    - run: dart test
